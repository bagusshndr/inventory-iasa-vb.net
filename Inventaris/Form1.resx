<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FEX5fby9/QdgapRegJPK2gAAAABJRU5ErkJggg==
</value>
  </data>
</root>